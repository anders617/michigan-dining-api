// Code generated by protoc-gen-go. DO NOT EDIT.
// source: mdining.proto

package mdining

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type DiningHallsRequest struct {
	Test                 string   `protobuf:"bytes,1,opt,name=test,proto3" json:"test,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DiningHallsRequest) Reset()         { *m = DiningHallsRequest{} }
func (m *DiningHallsRequest) String() string { return proto.CompactTextString(m) }
func (*DiningHallsRequest) ProtoMessage()    {}
func (*DiningHallsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_091ae99b284a4f82, []int{0}
}

func (m *DiningHallsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DiningHallsRequest.Unmarshal(m, b)
}
func (m *DiningHallsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DiningHallsRequest.Marshal(b, m, deterministic)
}
func (m *DiningHallsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DiningHallsRequest.Merge(m, src)
}
func (m *DiningHallsRequest) XXX_Size() int {
	return xxx_messageInfo_DiningHallsRequest.Size(m)
}
func (m *DiningHallsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DiningHallsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DiningHallsRequest proto.InternalMessageInfo

func (m *DiningHallsRequest) GetTest() string {
	if m != nil {
		return m.Test
	}
	return ""
}

type DiningHallsReply struct {
	Test                 string   `protobuf:"bytes,1,opt,name=test,proto3" json:"test,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DiningHallsReply) Reset()         { *m = DiningHallsReply{} }
func (m *DiningHallsReply) String() string { return proto.CompactTextString(m) }
func (*DiningHallsReply) ProtoMessage()    {}
func (*DiningHallsReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_091ae99b284a4f82, []int{1}
}

func (m *DiningHallsReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DiningHallsReply.Unmarshal(m, b)
}
func (m *DiningHallsReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DiningHallsReply.Marshal(b, m, deterministic)
}
func (m *DiningHallsReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DiningHallsReply.Merge(m, src)
}
func (m *DiningHallsReply) XXX_Size() int {
	return xxx_messageInfo_DiningHallsReply.Size(m)
}
func (m *DiningHallsReply) XXX_DiscardUnknown() {
	xxx_messageInfo_DiningHallsReply.DiscardUnknown(m)
}

var xxx_messageInfo_DiningHallsReply proto.InternalMessageInfo

func (m *DiningHallsReply) GetTest() string {
	if m != nil {
		return m.Test
	}
	return ""
}

func init() {
	proto.RegisterType((*DiningHallsRequest)(nil), "mdining.DiningHallsRequest")
	proto.RegisterType((*DiningHallsReply)(nil), "mdining.DiningHallsReply")
}

func init() { proto.RegisterFile("mdining.proto", fileDescriptor_091ae99b284a4f82) }

var fileDescriptor_091ae99b284a4f82 = []byte{
	// 128 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0xcd, 0x4d, 0xc9, 0xcc,
	0xcb, 0xcc, 0x4b, 0xd7, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x87, 0x72, 0x95, 0x34, 0xb8,
	0x84, 0x5c, 0xc0, 0x2c, 0x8f, 0xc4, 0x9c, 0x9c, 0xe2, 0xa0, 0xd4, 0xc2, 0xd2, 0xd4, 0xe2, 0x12,
	0x21, 0x21, 0x2e, 0x96, 0x92, 0xd4, 0xe2, 0x12, 0x09, 0x46, 0x05, 0x46, 0x0d, 0xce, 0x20, 0x30,
	0x5b, 0x49, 0x8d, 0x4b, 0x00, 0x45, 0x65, 0x41, 0x4e, 0x25, 0x36, 0x75, 0x46, 0xa1, 0x5c, 0xec,
	0xbe, 0x10, 0x85, 0x42, 0x5e, 0x5c, 0x7c, 0xee, 0xa9, 0x25, 0x48, 0xba, 0x84, 0xa4, 0xf5, 0x60,
	0xee, 0xc0, 0xb4, 0x55, 0x4a, 0x12, 0xbb, 0x64, 0x41, 0x4e, 0xa5, 0x12, 0x43, 0x12, 0x1b, 0xd8,
	0xe1, 0xc6, 0x80, 0x00, 0x00, 0x00, 0xff, 0xff, 0x88, 0x83, 0x0a, 0x35, 0xc9, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MDiningClient is the client API for MDining service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MDiningClient interface {
	GetDiningHalls(ctx context.Context, in *DiningHallsRequest, opts ...grpc.CallOption) (*DiningHallsReply, error)
}

type mDiningClient struct {
	cc *grpc.ClientConn
}

func NewMDiningClient(cc *grpc.ClientConn) MDiningClient {
	return &mDiningClient{cc}
}

func (c *mDiningClient) GetDiningHalls(ctx context.Context, in *DiningHallsRequest, opts ...grpc.CallOption) (*DiningHallsReply, error) {
	out := new(DiningHallsReply)
	err := c.cc.Invoke(ctx, "/mdining.MDining/GetDiningHalls", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MDiningServer is the server API for MDining service.
type MDiningServer interface {
	GetDiningHalls(context.Context, *DiningHallsRequest) (*DiningHallsReply, error)
}

// UnimplementedMDiningServer can be embedded to have forward compatible implementations.
type UnimplementedMDiningServer struct {
}

func (*UnimplementedMDiningServer) GetDiningHalls(ctx context.Context, req *DiningHallsRequest) (*DiningHallsReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDiningHalls not implemented")
}

func RegisterMDiningServer(s *grpc.Server, srv MDiningServer) {
	s.RegisterService(&_MDining_serviceDesc, srv)
}

func _MDining_GetDiningHalls_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DiningHallsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MDiningServer).GetDiningHalls(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mdining.MDining/GetDiningHalls",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MDiningServer).GetDiningHalls(ctx, req.(*DiningHallsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _MDining_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mdining.MDining",
	HandlerType: (*MDiningServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetDiningHalls",
			Handler:    _MDining_GetDiningHalls_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "mdining.proto",
}
